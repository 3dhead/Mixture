### YamlMime:ManagedReference
items:
- uid: Mixture.SceneNode
  commentId: T:Mixture.SceneNode
  id: SceneNode
  parent: Mixture
  children:
  - Mixture.SceneNode.Disable
  - Mixture.SceneNode.Enable
  - Mixture.SceneNode.hasSettings
  - Mixture.SceneNode.mode
  - Mixture.SceneNode.name
  - Mixture.SceneNode.nodeWidth
  - Mixture.SceneNode.OnNodeCreated
  - Mixture.SceneNode.outputTexture
  - Mixture.SceneNode.prefab
  - Mixture.SceneNode.previewTexture
  - Mixture.SceneNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  - Mixture.SceneNode.showDefaultInspector
  - Mixture.SceneNode.showPreviewExposure
  langs:
  - csharp
  - vb
  name: SceneNode
  nameWithType: SceneNode
  fullName: Mixture.SceneNode
  type: Class
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: SceneNode
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 14
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: >-
      [Documentation("\r\nRenders the content of the prefab using the camera at the root of the prefab.\r\nYou can use choose to output different buffers from the prefab: Color, Depth, World Normal, Tangent or World Position.\r\n\r\nOpening the prefab will switch to a render texture so you can visualize the changes in real-time in the graph.\r\nWhen you are satisfied with the setup in the prefab, click on 'Save Current View' to save the texture as sub-asset of the graph, you cna the close the prefab and the scene node will use this baked texture as output.\r\n\r\nNote that this node is currently only available with HDRP.\r\n")]

      [Serializable]

      public class SceneNode : MixtureNode
    content.vb: >-
      <Documentation(vbCrLf & "Renders the content of the prefab using the camera at the root of the prefab." & vbCrLf & "You can use choose to output different buffers from the prefab: Color, Depth, World Normal, Tangent or World Position." & vbCrLf & vbCrLf & "Opening the prefab will switch to a render texture so you can visualize the changes in real-time in the graph." & vbCrLf & "When you are satisfied with the setup in the prefab, click on 'Save Current View' to save the texture as sub-asset of the graph, you cna the close the prefab and the scene node will use this baked texture as output." & vbCrLf & vbCrLf & "Note that this node is currently only available with HDRP." & vbCrLf)>

      <Serializable>

      Public Class SceneNode
          Inherits MixtureNode
  inheritance:
  - System.Object
  - Mixture.MixtureNode
  inheritedMembers:
  - Mixture.MixtureNode.graph
  - Mixture.MixtureNode.rtSettings
  - Mixture.MixtureNode.defaultRTSettings
  - Mixture.MixtureNode.hasPreview
  - Mixture.MixtureNode.supportedDimensions
  - Mixture.MixtureNode.defaultPreviewChannels
  - Mixture.MixtureNode.isPreviewCollapsed
  - Mixture.MixtureNode.onSettingsChanged
  - Mixture.MixtureNode.beforeProcessSetup
  - Mixture.MixtureNode.afterProcessCleanup
  - Mixture.MixtureNode.showControlsOnHover
  - Mixture.MixtureNode.temporaryMaterials
  - Mixture.MixtureNode.previewMode
  - Mixture.MixtureNode.previewMip
  - Mixture.MixtureNode.previewVisible
  - Mixture.MixtureNode.previewEV100
  - Mixture.MixtureNode.recorder
  - Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean)
  - Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  - Mixture.MixtureNode.Process
  - Mixture.MixtureNode.AddObjectToGraph(UnityEngine.Object)
  - Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  - Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  - Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  - Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  - Mixture.MixtureNode.OnSettingsChanged
  - Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  - Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  - Mixture.MixtureNode.GetMixtureDependencies
  - Mixture.MixtureNode.GetTempMaterial(System.String)
  attributes:
  - type: Mixture.DocumentationAttribute
    ctor: Mixture.DocumentationAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: "\r\nRenders the content of the prefab using the camera at the root of the prefab.\r\nYou can use choose to output different buffers from the prefab: Color, Depth, World Normal, Tangent or World Position.\r\n\r\nOpening the prefab will switch to a render texture so you can visualize the changes in real-time in the graph.\r\nWhen you are satisfied with the setup in the prefab, click on 'Save Current View' to save the texture as sub-asset of the graph, you cna the close the prefab and the scene node will use this baked texture as output.\r\n\r\nNote that this node is currently only available with HDRP.\r\n"
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mixture.SceneNode.outputTexture
  commentId: F:Mixture.SceneNode.outputTexture
  id: outputTexture
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: outputTexture
  nameWithType: SceneNode.outputTexture
  fullName: Mixture.SceneNode.outputTexture
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: outputTexture
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 45
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: >-
      [Tooltip("Rendered view from the camera in the prefab")]

      [NonSerialized]

      public Texture outputTexture
    return:
      type: UnityEngine.Texture
    content.vb: >-
      <Tooltip("Rendered view from the camera in the prefab")>

      <NonSerialized>

      Public outputTexture As Texture
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Rendered view from the camera in the prefab
  - type: System.NonSerializedAttribute
    ctor: System.NonSerializedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SceneNode.mode
  commentId: F:Mixture.SceneNode.mode
  id: mode
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: mode
  nameWithType: SceneNode.mode
  fullName: Mixture.SceneNode.mode
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: mode
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 47
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public SceneNode.OutputMode mode
    return:
      type: Mixture.SceneNode.OutputMode
    content.vb: Public mode As SceneNode.OutputMode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SceneNode.hasSettings
  commentId: P:Mixture.SceneNode.hasSettings
  id: hasSettings
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: hasSettings
  nameWithType: SceneNode.hasSettings
  fullName: Mixture.SceneNode.hasSettings
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: hasSettings
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 49
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override bool hasSettings { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property hasSettings As Boolean
  overridden: Mixture.MixtureNode.hasSettings
  overload: Mixture.SceneNode.hasSettings*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.SceneNode.name
  commentId: P:Mixture.SceneNode.name
  id: name
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: name
  nameWithType: SceneNode.name
  fullName: Mixture.SceneNode.name
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: name
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 50
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override string name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property name As String
  overload: Mixture.SceneNode.name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.SceneNode.nodeWidth
  commentId: P:Mixture.SceneNode.nodeWidth
  id: nodeWidth
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: nodeWidth
  nameWithType: SceneNode.nodeWidth
  fullName: Mixture.SceneNode.nodeWidth
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: nodeWidth
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 51
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override float nodeWidth { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overrides ReadOnly Property nodeWidth As Single
  overridden: Mixture.MixtureNode.nodeWidth
  overload: Mixture.SceneNode.nodeWidth*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.SceneNode.previewTexture
  commentId: P:Mixture.SceneNode.previewTexture
  id: previewTexture
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: previewTexture
  nameWithType: SceneNode.previewTexture
  fullName: Mixture.SceneNode.previewTexture
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: previewTexture
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 52
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override Texture previewTexture { get; }
    parameters: []
    return:
      type: UnityEngine.Texture
    content.vb: Public Overrides ReadOnly Property previewTexture As Texture
  overridden: Mixture.MixtureNode.previewTexture
  overload: Mixture.SceneNode.previewTexture*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.SceneNode.showDefaultInspector
  commentId: P:Mixture.SceneNode.showDefaultInspector
  id: showDefaultInspector
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: showDefaultInspector
  nameWithType: SceneNode.showDefaultInspector
  fullName: Mixture.SceneNode.showDefaultInspector
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: showDefaultInspector
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 54
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override bool showDefaultInspector { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property showDefaultInspector As Boolean
  overridden: Mixture.MixtureNode.showDefaultInspector
  overload: Mixture.SceneNode.showDefaultInspector*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.SceneNode.showPreviewExposure
  commentId: P:Mixture.SceneNode.showPreviewExposure
  id: showPreviewExposure
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: showPreviewExposure
  nameWithType: SceneNode.showPreviewExposure
  fullName: Mixture.SceneNode.showPreviewExposure
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: showPreviewExposure
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 55
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override bool showPreviewExposure { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property showPreviewExposure As Boolean
  overridden: Mixture.MixtureNode.showPreviewExposure
  overload: Mixture.SceneNode.showPreviewExposure*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.SceneNode.prefab
  commentId: F:Mixture.SceneNode.prefab
  id: prefab
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: prefab
  nameWithType: SceneNode.prefab
  fullName: Mixture.SceneNode.prefab
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: prefab
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 57
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public GameObject prefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public prefab As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SceneNode.OnNodeCreated
  commentId: M:Mixture.SceneNode.OnNodeCreated
  id: OnNodeCreated
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: OnNodeCreated()
  nameWithType: SceneNode.OnNodeCreated()
  fullName: Mixture.SceneNode.OnNodeCreated()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: OnNodeCreated
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 70
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override void OnNodeCreated()
    content.vb: Public Overrides Sub OnNodeCreated
  overridden: Mixture.MixtureNode.OnNodeCreated
  overload: Mixture.SceneNode.OnNodeCreated*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mixture.SceneNode.Enable
  commentId: M:Mixture.SceneNode.Enable
  id: Enable
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: Enable()
  nameWithType: SceneNode.Enable()
  fullName: Mixture.SceneNode.Enable()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: Enable
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 97
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override void Enable()
    content.vb: Protected Overrides Sub Enable
  overload: Mixture.SceneNode.Enable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mixture.SceneNode.Disable
  commentId: M:Mixture.SceneNode.Disable
  id: Disable
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: Disable()
  nameWithType: SceneNode.Disable()
  fullName: Mixture.SceneNode.Disable()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: Disable
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 112
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override void Disable()
    content.vb: Protected Overrides Sub Disable
  overridden: Mixture.MixtureNode.Disable
  overload: Mixture.SceneNode.Disable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mixture.SceneNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.SceneNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  id: ProcessNode(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.SceneNode
  langs:
  - csharp
  - vb
  name: ProcessNode(CommandBuffer)
  nameWithType: SceneNode.ProcessNode(CommandBuffer)
  fullName: Mixture.SceneNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: ProcessNode
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/Utils/SceneNode.cs
    startLine: 120
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override bool ProcessNode(CommandBuffer cmd)
    parameters:
    - id: cmd
      type: UnityEngine.Rendering.CommandBuffer
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function ProcessNode(cmd As CommandBuffer) As Boolean
  overridden: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  overload: Mixture.SceneNode.ProcessNode*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mixture
  commentId: N:Mixture
  name: Mixture
  nameWithType: Mixture
  fullName: Mixture
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mixture.MixtureNode
  commentId: T:Mixture.MixtureNode
  parent: Mixture
  name: MixtureNode
  nameWithType: MixtureNode
  fullName: Mixture.MixtureNode
- uid: Mixture.MixtureNode.graph
  commentId: P:Mixture.MixtureNode.graph
  parent: Mixture.MixtureNode
  name: graph
  nameWithType: MixtureNode.graph
  fullName: Mixture.MixtureNode.graph
- uid: Mixture.MixtureNode.rtSettings
  commentId: F:Mixture.MixtureNode.rtSettings
  parent: Mixture.MixtureNode
  name: rtSettings
  nameWithType: MixtureNode.rtSettings
  fullName: Mixture.MixtureNode.rtSettings
- uid: Mixture.MixtureNode.defaultRTSettings
  commentId: P:Mixture.MixtureNode.defaultRTSettings
  parent: Mixture.MixtureNode
  name: defaultRTSettings
  nameWithType: MixtureNode.defaultRTSettings
  fullName: Mixture.MixtureNode.defaultRTSettings
- uid: Mixture.MixtureNode.hasPreview
  commentId: P:Mixture.MixtureNode.hasPreview
  parent: Mixture.MixtureNode
  name: hasPreview
  nameWithType: MixtureNode.hasPreview
  fullName: Mixture.MixtureNode.hasPreview
- uid: Mixture.MixtureNode.supportedDimensions
  commentId: P:Mixture.MixtureNode.supportedDimensions
  parent: Mixture.MixtureNode
  name: supportedDimensions
  nameWithType: MixtureNode.supportedDimensions
  fullName: Mixture.MixtureNode.supportedDimensions
- uid: Mixture.MixtureNode.defaultPreviewChannels
  commentId: P:Mixture.MixtureNode.defaultPreviewChannels
  parent: Mixture.MixtureNode
  name: defaultPreviewChannels
  nameWithType: MixtureNode.defaultPreviewChannels
  fullName: Mixture.MixtureNode.defaultPreviewChannels
- uid: Mixture.MixtureNode.isPreviewCollapsed
  commentId: F:Mixture.MixtureNode.isPreviewCollapsed
  parent: Mixture.MixtureNode
  name: isPreviewCollapsed
  nameWithType: MixtureNode.isPreviewCollapsed
  fullName: Mixture.MixtureNode.isPreviewCollapsed
- uid: Mixture.MixtureNode.onSettingsChanged
  commentId: E:Mixture.MixtureNode.onSettingsChanged
  parent: Mixture.MixtureNode
  name: onSettingsChanged
  nameWithType: MixtureNode.onSettingsChanged
  fullName: Mixture.MixtureNode.onSettingsChanged
- uid: Mixture.MixtureNode.beforeProcessSetup
  commentId: E:Mixture.MixtureNode.beforeProcessSetup
  parent: Mixture.MixtureNode
  name: beforeProcessSetup
  nameWithType: MixtureNode.beforeProcessSetup
  fullName: Mixture.MixtureNode.beforeProcessSetup
- uid: Mixture.MixtureNode.afterProcessCleanup
  commentId: E:Mixture.MixtureNode.afterProcessCleanup
  parent: Mixture.MixtureNode
  name: afterProcessCleanup
  nameWithType: MixtureNode.afterProcessCleanup
  fullName: Mixture.MixtureNode.afterProcessCleanup
- uid: Mixture.MixtureNode.showControlsOnHover
  commentId: P:Mixture.MixtureNode.showControlsOnHover
  parent: Mixture.MixtureNode
  name: showControlsOnHover
  nameWithType: MixtureNode.showControlsOnHover
  fullName: Mixture.MixtureNode.showControlsOnHover
- uid: Mixture.MixtureNode.temporaryMaterials
  commentId: F:Mixture.MixtureNode.temporaryMaterials
  parent: Mixture.MixtureNode
  name: temporaryMaterials
  nameWithType: MixtureNode.temporaryMaterials
  fullName: Mixture.MixtureNode.temporaryMaterials
- uid: Mixture.MixtureNode.previewMode
  commentId: F:Mixture.MixtureNode.previewMode
  parent: Mixture.MixtureNode
  name: previewMode
  nameWithType: MixtureNode.previewMode
  fullName: Mixture.MixtureNode.previewMode
- uid: Mixture.MixtureNode.previewMip
  commentId: F:Mixture.MixtureNode.previewMip
  parent: Mixture.MixtureNode
  name: previewMip
  nameWithType: MixtureNode.previewMip
  fullName: Mixture.MixtureNode.previewMip
- uid: Mixture.MixtureNode.previewVisible
  commentId: F:Mixture.MixtureNode.previewVisible
  parent: Mixture.MixtureNode
  name: previewVisible
  nameWithType: MixtureNode.previewVisible
  fullName: Mixture.MixtureNode.previewVisible
- uid: Mixture.MixtureNode.previewEV100
  commentId: F:Mixture.MixtureNode.previewEV100
  parent: Mixture.MixtureNode
  name: previewEV100
  nameWithType: MixtureNode.previewEV100
  fullName: Mixture.MixtureNode.previewEV100
- uid: Mixture.MixtureNode.recorder
  commentId: P:Mixture.MixtureNode.recorder
  parent: Mixture.MixtureNode
  name: recorder
  nameWithType: MixtureNode.recorder
  fullName: Mixture.MixtureNode.recorder
- uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean)
  commentId: M:Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean)
  parent: Mixture.MixtureNode
  isExternal: true
  name: UpdateTempRenderTexture(CustomRenderTexture, Boolean, Boolean)
  nameWithType: MixtureNode.UpdateTempRenderTexture(CustomRenderTexture, Boolean, Boolean)
  fullName: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean)
    name: UpdateTempRenderTexture
    nameWithType: MixtureNode.UpdateTempRenderTexture
    fullName: Mixture.MixtureNode.UpdateTempRenderTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.CustomRenderTexture
    name: CustomRenderTexture
    nameWithType: CustomRenderTexture
    fullName: UnityEngine.CustomRenderTexture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean)
    name: UpdateTempRenderTexture
    nameWithType: MixtureNode.UpdateTempRenderTexture
    fullName: Mixture.MixtureNode.UpdateTempRenderTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.CustomRenderTexture
    name: CustomRenderTexture
    nameWithType: CustomRenderTexture
    fullName: UnityEngine.CustomRenderTexture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.MixtureNode
  isExternal: true
  name: OnProcess(CommandBuffer)
  nameWithType: MixtureNode.OnProcess(CommandBuffer)
  fullName: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  spec.csharp:
  - uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
    name: OnProcess
    nameWithType: MixtureNode.OnProcess
    fullName: Mixture.MixtureNode.OnProcess
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
    name: OnProcess
    nameWithType: MixtureNode.OnProcess
    fullName: Mixture.MixtureNode.OnProcess
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.Process
  commentId: M:Mixture.MixtureNode.Process
  parent: Mixture.MixtureNode
  name: Process()
  nameWithType: MixtureNode.Process()
  fullName: Mixture.MixtureNode.Process()
  spec.csharp:
  - uid: Mixture.MixtureNode.Process
    name: Process
    nameWithType: MixtureNode.Process
    fullName: Mixture.MixtureNode.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.Process
    name: Process
    nameWithType: MixtureNode.Process
    fullName: Mixture.MixtureNode.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.AddObjectToGraph(UnityEngine.Object)
  commentId: M:Mixture.MixtureNode.AddObjectToGraph(UnityEngine.Object)
  parent: Mixture.MixtureNode
  isExternal: true
  name: AddObjectToGraph(Object)
  nameWithType: MixtureNode.AddObjectToGraph(Object)
  fullName: Mixture.MixtureNode.AddObjectToGraph(UnityEngine.Object)
  spec.csharp:
  - uid: Mixture.MixtureNode.AddObjectToGraph(UnityEngine.Object)
    name: AddObjectToGraph
    nameWithType: MixtureNode.AddObjectToGraph
    fullName: Mixture.MixtureNode.AddObjectToGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.AddObjectToGraph(UnityEngine.Object)
    name: AddObjectToGraph
    nameWithType: MixtureNode.AddObjectToGraph
    fullName: Mixture.MixtureNode.AddObjectToGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  commentId: M:Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  parent: Mixture.MixtureNode
  isExternal: true
  name: RemoveObjectFromGraph(Object)
  nameWithType: MixtureNode.RemoveObjectFromGraph(Object)
  fullName: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  spec.csharp:
  - uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
    name: RemoveObjectFromGraph
    nameWithType: MixtureNode.RemoveObjectFromGraph
    fullName: Mixture.MixtureNode.RemoveObjectFromGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
    name: RemoveObjectFromGraph
    nameWithType: MixtureNode.RemoveObjectFromGraph
    fullName: Mixture.MixtureNode.RemoveObjectFromGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  commentId: M:Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetPropertyType(Shader, Int32)
  nameWithType: MixtureNode.GetPropertyType(Shader, Int32)
  fullName: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader, System.Int32)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
    name: GetPropertyType
    nameWithType: MixtureNode.GetPropertyType
    fullName: Mixture.MixtureNode.GetPropertyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Shader
    name: Shader
    nameWithType: Shader
    fullName: UnityEngine.Shader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
    name: GetPropertyType
    nameWithType: MixtureNode.GetPropertyType
    fullName: Mixture.MixtureNode.GetPropertyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Shader
    name: Shader
    nameWithType: Shader
    fullName: UnityEngine.Shader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetMaterialPortDatas(Material)
  nameWithType: MixtureNode.GetMaterialPortDatas(Material)
  fullName: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
    name: GetMaterialPortDatas
    nameWithType: MixtureNode.GetMaterialPortDatas
    fullName: Mixture.MixtureNode.GetMaterialPortDatas
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
    name: GetMaterialPortDatas
    nameWithType: MixtureNode.GetMaterialPortDatas
    fullName: Mixture.MixtureNode.GetMaterialPortDatas
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: AssignMaterialPropertiesFromEdges(List<SerializableEdge>, Material)
  nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges(List<SerializableEdge>, Material)
  fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List<SerializableEdge>, UnityEngine.Material)
  nameWithType.vb: MixtureNode.AssignMaterialPropertiesFromEdges(List(Of SerializableEdge), Material)
  fullName.vb: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List(Of SerializableEdge), UnityEngine.Material)
  name.vb: AssignMaterialPropertiesFromEdges(List(Of SerializableEdge), Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
    name: AssignMaterialPropertiesFromEdges
    nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges
    fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
    name: AssignMaterialPropertiesFromEdges
    nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges
    fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.OnSettingsChanged
  commentId: M:Mixture.MixtureNode.OnSettingsChanged
  parent: Mixture.MixtureNode
  name: OnSettingsChanged()
  nameWithType: MixtureNode.OnSettingsChanged()
  fullName: Mixture.MixtureNode.OnSettingsChanged()
  spec.csharp:
  - uid: Mixture.MixtureNode.OnSettingsChanged
    name: OnSettingsChanged
    nameWithType: MixtureNode.OnSettingsChanged
    fullName: Mixture.MixtureNode.OnSettingsChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnSettingsChanged
    name: OnSettingsChanged
    nameWithType: MixtureNode.OnSettingsChanged
    fullName: Mixture.MixtureNode.OnSettingsChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetDefaultMaterial(Material)
  nameWithType: MixtureNode.GetDefaultMaterial(Material)
  fullName: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
    name: GetDefaultMaterial
    nameWithType: MixtureNode.GetDefaultMaterial
    fullName: Mixture.MixtureNode.GetDefaultMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
    name: GetDefaultMaterial
    nameWithType: MixtureNode.GetDefaultMaterial
    fullName: Mixture.MixtureNode.GetDefaultMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  commentId: M:Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  parent: Mixture.MixtureNode
  isExternal: true
  name: ResetMaterialPropertyToDefault(Material, String)
  nameWithType: MixtureNode.ResetMaterialPropertyToDefault(Material, String)
  fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material, System.String)
  spec.csharp:
  - uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
    name: ResetMaterialPropertyToDefault
    nameWithType: MixtureNode.ResetMaterialPropertyToDefault
    fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
    name: ResetMaterialPropertyToDefault
    nameWithType: MixtureNode.ResetMaterialPropertyToDefault
    fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetMixtureDependencies
  commentId: M:Mixture.MixtureNode.GetMixtureDependencies
  parent: Mixture.MixtureNode
  name: GetMixtureDependencies()
  nameWithType: MixtureNode.GetMixtureDependencies()
  fullName: Mixture.MixtureNode.GetMixtureDependencies()
  spec.csharp:
  - uid: Mixture.MixtureNode.GetMixtureDependencies
    name: GetMixtureDependencies
    nameWithType: MixtureNode.GetMixtureDependencies
    fullName: Mixture.MixtureNode.GetMixtureDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetMixtureDependencies
    name: GetMixtureDependencies
    nameWithType: MixtureNode.GetMixtureDependencies
    fullName: Mixture.MixtureNode.GetMixtureDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetTempMaterial(System.String)
  commentId: M:Mixture.MixtureNode.GetTempMaterial(System.String)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetTempMaterial(String)
  nameWithType: MixtureNode.GetTempMaterial(String)
  fullName: Mixture.MixtureNode.GetTempMaterial(System.String)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetTempMaterial(System.String)
    name: GetTempMaterial
    nameWithType: MixtureNode.GetTempMaterial
    fullName: Mixture.MixtureNode.GetTempMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetTempMaterial(System.String)
    name: GetTempMaterial
    nameWithType: MixtureNode.GetTempMaterial
    fullName: Mixture.MixtureNode.GetTempMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Texture
  commentId: T:UnityEngine.Texture
  parent: UnityEngine
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Mixture.SceneNode.OutputMode
  commentId: T:Mixture.SceneNode.OutputMode
  parent: Mixture
  name: SceneNode.OutputMode
  nameWithType: SceneNode.OutputMode
  fullName: Mixture.SceneNode.OutputMode
- uid: Mixture.MixtureNode.hasSettings
  commentId: P:Mixture.MixtureNode.hasSettings
  parent: Mixture.MixtureNode
  name: hasSettings
  nameWithType: MixtureNode.hasSettings
  fullName: Mixture.MixtureNode.hasSettings
- uid: Mixture.SceneNode.hasSettings*
  commentId: Overload:Mixture.SceneNode.hasSettings
  name: hasSettings
  nameWithType: SceneNode.hasSettings
  fullName: Mixture.SceneNode.hasSettings
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mixture.SceneNode.name*
  commentId: Overload:Mixture.SceneNode.name
  name: name
  nameWithType: SceneNode.name
  fullName: Mixture.SceneNode.name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mixture.MixtureNode.nodeWidth
  commentId: P:Mixture.MixtureNode.nodeWidth
  parent: Mixture.MixtureNode
  name: nodeWidth
  nameWithType: MixtureNode.nodeWidth
  fullName: Mixture.MixtureNode.nodeWidth
- uid: Mixture.SceneNode.nodeWidth*
  commentId: Overload:Mixture.SceneNode.nodeWidth
  name: nodeWidth
  nameWithType: SceneNode.nodeWidth
  fullName: Mixture.SceneNode.nodeWidth
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Mixture.MixtureNode.previewTexture
  commentId: P:Mixture.MixtureNode.previewTexture
  parent: Mixture.MixtureNode
  name: previewTexture
  nameWithType: MixtureNode.previewTexture
  fullName: Mixture.MixtureNode.previewTexture
- uid: Mixture.SceneNode.previewTexture*
  commentId: Overload:Mixture.SceneNode.previewTexture
  name: previewTexture
  nameWithType: SceneNode.previewTexture
  fullName: Mixture.SceneNode.previewTexture
- uid: Mixture.MixtureNode.showDefaultInspector
  commentId: P:Mixture.MixtureNode.showDefaultInspector
  parent: Mixture.MixtureNode
  name: showDefaultInspector
  nameWithType: MixtureNode.showDefaultInspector
  fullName: Mixture.MixtureNode.showDefaultInspector
- uid: Mixture.SceneNode.showDefaultInspector*
  commentId: Overload:Mixture.SceneNode.showDefaultInspector
  name: showDefaultInspector
  nameWithType: SceneNode.showDefaultInspector
  fullName: Mixture.SceneNode.showDefaultInspector
- uid: Mixture.MixtureNode.showPreviewExposure
  commentId: P:Mixture.MixtureNode.showPreviewExposure
  parent: Mixture.MixtureNode
  name: showPreviewExposure
  nameWithType: MixtureNode.showPreviewExposure
  fullName: Mixture.MixtureNode.showPreviewExposure
- uid: Mixture.SceneNode.showPreviewExposure*
  commentId: Overload:Mixture.SceneNode.showPreviewExposure
  name: showPreviewExposure
  nameWithType: SceneNode.showPreviewExposure
  fullName: Mixture.SceneNode.showPreviewExposure
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Mixture.MixtureNode.OnNodeCreated
  commentId: M:Mixture.MixtureNode.OnNodeCreated
  parent: Mixture.MixtureNode
  name: OnNodeCreated()
  nameWithType: MixtureNode.OnNodeCreated()
  fullName: Mixture.MixtureNode.OnNodeCreated()
  spec.csharp:
  - uid: Mixture.MixtureNode.OnNodeCreated
    name: OnNodeCreated
    nameWithType: MixtureNode.OnNodeCreated
    fullName: Mixture.MixtureNode.OnNodeCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnNodeCreated
    name: OnNodeCreated
    nameWithType: MixtureNode.OnNodeCreated
    fullName: Mixture.MixtureNode.OnNodeCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.SceneNode.OnNodeCreated*
  commentId: Overload:Mixture.SceneNode.OnNodeCreated
  name: OnNodeCreated
  nameWithType: SceneNode.OnNodeCreated
  fullName: Mixture.SceneNode.OnNodeCreated
- uid: Mixture.SceneNode.Enable*
  commentId: Overload:Mixture.SceneNode.Enable
  name: Enable
  nameWithType: SceneNode.Enable
  fullName: Mixture.SceneNode.Enable
- uid: Mixture.MixtureNode.Disable
  commentId: M:Mixture.MixtureNode.Disable
  parent: Mixture.MixtureNode
  name: Disable()
  nameWithType: MixtureNode.Disable()
  fullName: Mixture.MixtureNode.Disable()
  spec.csharp:
  - uid: Mixture.MixtureNode.Disable
    name: Disable
    nameWithType: MixtureNode.Disable
    fullName: Mixture.MixtureNode.Disable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.Disable
    name: Disable
    nameWithType: MixtureNode.Disable
    fullName: Mixture.MixtureNode.Disable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.SceneNode.Disable*
  commentId: Overload:Mixture.SceneNode.Disable
  name: Disable
  nameWithType: SceneNode.Disable
  fullName: Mixture.SceneNode.Disable
- uid: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.MixtureNode
  isExternal: true
  name: ProcessNode(CommandBuffer)
  nameWithType: MixtureNode.ProcessNode(CommandBuffer)
  fullName: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  spec.csharp:
  - uid: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
    name: ProcessNode
    nameWithType: MixtureNode.ProcessNode
    fullName: Mixture.MixtureNode.ProcessNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
    name: ProcessNode
    nameWithType: MixtureNode.ProcessNode
    fullName: Mixture.MixtureNode.ProcessNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.SceneNode.ProcessNode*
  commentId: Overload:Mixture.SceneNode.ProcessNode
  name: ProcessNode
  nameWithType: SceneNode.ProcessNode
  fullName: Mixture.SceneNode.ProcessNode
- uid: UnityEngine.Rendering.CommandBuffer
  commentId: T:UnityEngine.Rendering.CommandBuffer
  parent: UnityEngine.Rendering
  isExternal: true
  name: CommandBuffer
  nameWithType: CommandBuffer
  fullName: UnityEngine.Rendering.CommandBuffer
- uid: UnityEngine.Rendering
  commentId: N:UnityEngine.Rendering
  isExternal: true
  name: UnityEngine.Rendering
  nameWithType: UnityEngine.Rendering
  fullName: UnityEngine.Rendering
