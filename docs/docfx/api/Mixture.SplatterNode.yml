### YamlMime:ManagedReference
items:
- uid: Mixture.SplatterNode
  commentId: T:Mixture.SplatterNode
  id: SplatterNode
  parent: Mixture
  children:
  - Mixture.SplatterNode.blendOperator
  - Mixture.SplatterNode.computeShaderResourcePath
  - Mixture.SplatterNode.Disable
  - Mixture.SplatterNode.Enable
  - Mixture.SplatterNode.extent
  - Mixture.SplatterNode.fixedAngles
  - Mixture.SplatterNode.fixedScale
  - Mixture.SplatterNode.gridCram
  - Mixture.SplatterNode.gridShift
  - Mixture.SplatterNode.gridSize
  - Mixture.SplatterNode.inputTextures
  - Mixture.SplatterNode.maxAngles
  - Mixture.SplatterNode.maxScale
  - Mixture.SplatterNode.maxSplatCount
  - Mixture.SplatterNode.minAngles
  - Mixture.SplatterNode.minScale
  - Mixture.SplatterNode.name
  - Mixture.SplatterNode.output
  - Mixture.SplatterNode.positionJitter
  - Mixture.SplatterNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  - Mixture.SplatterNode.rotationMode
  - Mixture.SplatterNode.scaleMode
  - Mixture.SplatterNode.sequence
  - Mixture.SplatterNode.showDefaultInspector
  - Mixture.SplatterNode.stackPosition
  - Mixture.SplatterNode.supportedDimensions
  langs:
  - csharp
  - vb
  name: SplatterNode
  nameWithType: SplatterNode
  fullName: Mixture.SplatterNode
  type: Class
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: SplatterNode
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 9
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: >-
      [Serializable]

      public class SplatterNode : ComputeShaderNode
    content.vb: >-
      <Serializable>

      Public Class SplatterNode
          Inherits ComputeShaderNode
  inheritance:
  - System.Object
  - Mixture.MixtureNode
  - Mixture.ComputeShaderNode
  inheritedMembers:
  - Mixture.ComputeShaderNode.computeShader
  - Mixture.ComputeShaderNode.previewTexture
  - Mixture.ComputeShaderNode.tempRenderTexture
  - Mixture.ComputeShaderNode.previewTexturePropertyName
  - Mixture.ComputeShaderNode.showOpenButton
  - Mixture.ComputeShaderNode.LoadComputeShader(System.String)
  - Mixture.ComputeShaderNode.canProcess
  - Mixture.ComputeShaderNode.ComputeIsValid
  - Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,System.Int32,System.Int32,System.Int32,System.Int32)
  - Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32,System.Int32,System.Int32,System.Int32)
  - Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,System.Int32)
  - Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32)
  - Mixture.ComputeShaderNode.ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
  - Mixture.MixtureNode.graph
  - Mixture.MixtureNode.rtSettings
  - Mixture.MixtureNode.defaultRTSettings
  - Mixture.MixtureNode.nodeWidth
  - Mixture.MixtureNode.hasSettings
  - Mixture.MixtureNode.hasPreview
  - Mixture.MixtureNode.defaultPreviewChannels
  - Mixture.MixtureNode.showPreviewExposure
  - Mixture.MixtureNode.isPreviewCollapsed
  - Mixture.MixtureNode.onSettingsChanged
  - Mixture.MixtureNode.beforeProcessSetup
  - Mixture.MixtureNode.afterProcessCleanup
  - Mixture.MixtureNode.showControlsOnHover
  - Mixture.MixtureNode.temporaryMaterials
  - Mixture.MixtureNode.previewMode
  - Mixture.MixtureNode.previewMip
  - Mixture.MixtureNode.previewVisible
  - Mixture.MixtureNode.previewEV100
  - Mixture.MixtureNode.recorder
  - Mixture.MixtureNode.OnNodeCreated
  - Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean)
  - Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  - Mixture.MixtureNode.Process
  - Mixture.MixtureNode.AddObjectToGraph(UnityEngine.Object)
  - Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  - Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  - Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  - Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  - Mixture.MixtureNode.OnSettingsChanged
  - Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  - Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  - Mixture.MixtureNode.GetMixtureDependencies
  - Mixture.MixtureNode.GetTempMaterial(System.String)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mixture.SplatterNode.inputTextures
  commentId: F:Mixture.SplatterNode.inputTextures
  id: inputTextures
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: inputTextures
  nameWithType: SplatterNode.inputTextures
  fullName: Mixture.SplatterNode.inputTextures
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: inputTextures
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 33
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public List<Texture> inputTextures
    return:
      type: System.Collections.Generic.List{UnityEngine.Texture}
    content.vb: Public inputTextures As List(Of Texture)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.output
  commentId: F:Mixture.SplatterNode.output
  id: output
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: output
  nameWithType: SplatterNode.output
  fullName: Mixture.SplatterNode.output
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: output
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 36
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Texture output
    return:
      type: UnityEngine.Texture
    content.vb: Public output As Texture
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.maxSplatCount
  commentId: F:Mixture.SplatterNode.maxSplatCount
  id: maxSplatCount
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: maxSplatCount
  nameWithType: SplatterNode.maxSplatCount
  fullName: Mixture.SplatterNode.maxSplatCount
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: maxSplatCount
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 38
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public int maxSplatCount
    return:
      type: System.Int32
    content.vb: Public maxSplatCount As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.extent
  commentId: F:Mixture.SplatterNode.extent
  id: extent
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: extent
  nameWithType: SplatterNode.extent
  fullName: Mixture.SplatterNode.extent
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: extent
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 40
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Vector2 extent
    return:
      type: UnityEngine.Vector2
    content.vb: Public extent As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.sequence
  commentId: F:Mixture.SplatterNode.sequence
  id: sequence
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: sequence
  nameWithType: SplatterNode.sequence
  fullName: Mixture.SplatterNode.sequence
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: sequence
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 42
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public SplatterNode.Sequence sequence
    return:
      type: Mixture.SplatterNode.Sequence
    content.vb: Public sequence As SplatterNode.Sequence
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.stackPosition
  commentId: F:Mixture.SplatterNode.stackPosition
  id: stackPosition
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: stackPosition
  nameWithType: SplatterNode.stackPosition
  fullName: Mixture.SplatterNode.stackPosition
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: stackPosition
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 46
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Vector3 stackPosition
    return:
      type: UnityEngine.Vector3
    content.vb: Public stackPosition As Vector3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.gridSize
  commentId: F:Mixture.SplatterNode.gridSize
  id: gridSize
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: gridSize
  nameWithType: SplatterNode.gridSize
  fullName: Mixture.SplatterNode.gridSize
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: gridSize
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 50
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Vector2 gridSize
    return:
      type: UnityEngine.Vector2
    content.vb: Public gridSize As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.gridCram
  commentId: F:Mixture.SplatterNode.gridCram
  id: gridCram
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: gridCram
  nameWithType: SplatterNode.gridCram
  fullName: Mixture.SplatterNode.gridCram
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: gridCram
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 52
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Vector2 gridCram
    return:
      type: UnityEngine.Vector2
    content.vb: Public gridCram As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.gridShift
  commentId: F:Mixture.SplatterNode.gridShift
  id: gridShift
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: gridShift
  nameWithType: SplatterNode.gridShift
  fullName: Mixture.SplatterNode.gridShift
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: gridShift
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 54
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Vector2 gridShift
    return:
      type: UnityEngine.Vector2
    content.vb: Public gridShift As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.positionJitter
  commentId: F:Mixture.SplatterNode.positionJitter
  id: positionJitter
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: positionJitter
  nameWithType: SplatterNode.positionJitter
  fullName: Mixture.SplatterNode.positionJitter
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: positionJitter
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 57
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Vector3 positionJitter
    return:
      type: UnityEngine.Vector3
    content.vb: Public positionJitter As Vector3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.rotationMode
  commentId: F:Mixture.SplatterNode.rotationMode
  id: rotationMode
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: rotationMode
  nameWithType: SplatterNode.rotationMode
  fullName: Mixture.SplatterNode.rotationMode
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: rotationMode
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 60
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public SplatterNode.RotationMode rotationMode
    return:
      type: Mixture.SplatterNode.RotationMode
    content.vb: Public rotationMode As SplatterNode.RotationMode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.fixedAngles
  commentId: F:Mixture.SplatterNode.fixedAngles
  id: fixedAngles
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: fixedAngles
  nameWithType: SplatterNode.fixedAngles
  fullName: Mixture.SplatterNode.fixedAngles
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: fixedAngles
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 64
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Vector3 fixedAngles
    return:
      type: UnityEngine.Vector3
    content.vb: Public fixedAngles As Vector3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.minAngles
  commentId: F:Mixture.SplatterNode.minAngles
  id: minAngles
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: minAngles
  nameWithType: SplatterNode.minAngles
  fullName: Mixture.SplatterNode.minAngles
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: minAngles
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 66
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Vector3 minAngles
    return:
      type: UnityEngine.Vector3
    content.vb: Public minAngles As Vector3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.maxAngles
  commentId: F:Mixture.SplatterNode.maxAngles
  id: maxAngles
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: maxAngles
  nameWithType: SplatterNode.maxAngles
  fullName: Mixture.SplatterNode.maxAngles
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: maxAngles
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 68
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Vector3 maxAngles
    return:
      type: UnityEngine.Vector3
    content.vb: Public maxAngles As Vector3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.scaleMode
  commentId: F:Mixture.SplatterNode.scaleMode
  id: scaleMode
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: scaleMode
  nameWithType: SplatterNode.scaleMode
  fullName: Mixture.SplatterNode.scaleMode
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: scaleMode
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 70
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public SplatterNode.ScaleMode scaleMode
    return:
      type: Mixture.SplatterNode.ScaleMode
    content.vb: Public scaleMode As SplatterNode.ScaleMode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.fixedScale
  commentId: F:Mixture.SplatterNode.fixedScale
  id: fixedScale
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: fixedScale
  nameWithType: SplatterNode.fixedScale
  fullName: Mixture.SplatterNode.fixedScale
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: fixedScale
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 73
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Vector3 fixedScale
    return:
      type: UnityEngine.Vector3
    content.vb: Public fixedScale As Vector3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.minScale
  commentId: F:Mixture.SplatterNode.minScale
  id: minScale
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: minScale
  nameWithType: SplatterNode.minScale
  fullName: Mixture.SplatterNode.minScale
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: minScale
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 75
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Vector3 minScale
    return:
      type: UnityEngine.Vector3
    content.vb: Public minScale As Vector3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.maxScale
  commentId: F:Mixture.SplatterNode.maxScale
  id: maxScale
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: maxScale
  nameWithType: SplatterNode.maxScale
  fullName: Mixture.SplatterNode.maxScale
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: maxScale
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 77
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public Vector3 maxScale
    return:
      type: UnityEngine.Vector3
    content.vb: Public maxScale As Vector3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.blendOperator
  commentId: F:Mixture.SplatterNode.blendOperator
  id: blendOperator
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: blendOperator
  nameWithType: SplatterNode.blendOperator
  fullName: Mixture.SplatterNode.blendOperator
  type: Field
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: blendOperator
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 79
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public SplatterNode.Operator blendOperator
    return:
      type: Mixture.SplatterNode.Operator
    content.vb: Public blendOperator As SplatterNode.Operator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixture.SplatterNode.name
  commentId: P:Mixture.SplatterNode.name
  id: name
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: name
  nameWithType: SplatterNode.name
  fullName: Mixture.SplatterNode.name
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: name
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 81
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override string name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property name As String
  overridden: Mixture.ComputeShaderNode.name
  overload: Mixture.SplatterNode.name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.SplatterNode.computeShaderResourcePath
  commentId: P:Mixture.SplatterNode.computeShaderResourcePath
  id: computeShaderResourcePath
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: computeShaderResourcePath
  nameWithType: SplatterNode.computeShaderResourcePath
  fullName: Mixture.SplatterNode.computeShaderResourcePath
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: computeShaderResourcePath
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 82
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override string computeShaderResourcePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Overrides ReadOnly Property computeShaderResourcePath As String
  overridden: Mixture.ComputeShaderNode.computeShaderResourcePath
  overload: Mixture.SplatterNode.computeShaderResourcePath*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Mixture.SplatterNode.supportedDimensions
  commentId: P:Mixture.SplatterNode.supportedDimensions
  id: supportedDimensions
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: supportedDimensions
  nameWithType: SplatterNode.supportedDimensions
  fullName: Mixture.SplatterNode.supportedDimensions
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: supportedDimensions
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 83
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override List<OutputDimension> supportedDimensions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mixture.OutputDimension}
    content.vb: Public Overrides ReadOnly Property supportedDimensions As List(Of OutputDimension)
  overridden: Mixture.MixtureNode.supportedDimensions
  overload: Mixture.SplatterNode.supportedDimensions*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.SplatterNode.showDefaultInspector
  commentId: P:Mixture.SplatterNode.showDefaultInspector
  id: showDefaultInspector
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: showDefaultInspector
  nameWithType: SplatterNode.showDefaultInspector
  fullName: Mixture.SplatterNode.showDefaultInspector
  type: Property
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: showDefaultInspector
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 87
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: public override bool showDefaultInspector { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property showDefaultInspector As Boolean
  overridden: Mixture.MixtureNode.showDefaultInspector
  overload: Mixture.SplatterNode.showDefaultInspector*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Mixture.SplatterNode.Enable
  commentId: M:Mixture.SplatterNode.Enable
  id: Enable
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: Enable()
  nameWithType: SplatterNode.Enable()
  fullName: Mixture.SplatterNode.Enable()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: Enable
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 148
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override void Enable()
    content.vb: Protected Overrides Sub Enable
  overridden: Mixture.ComputeShaderNode.Enable
  overload: Mixture.SplatterNode.Enable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mixture.SplatterNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.SplatterNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  id: ProcessNode(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: ProcessNode(CommandBuffer)
  nameWithType: SplatterNode.ProcessNode(CommandBuffer)
  fullName: Mixture.SplatterNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: ProcessNode
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 159
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override bool ProcessNode(CommandBuffer cmd)
    parameters:
    - id: cmd
      type: UnityEngine.Rendering.CommandBuffer
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function ProcessNode(cmd As CommandBuffer) As Boolean
  overridden: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  overload: Mixture.SplatterNode.ProcessNode*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mixture.SplatterNode.Disable
  commentId: M:Mixture.SplatterNode.Disable
  id: Disable
  parent: Mixture.SplatterNode
  langs:
  - csharp
  - vb
  name: Disable()
  nameWithType: SplatterNode.Disable()
  fullName: Mixture.SplatterNode.Disable()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: Disable
    path: ../../Packages/com.alelievr.mixture/Runtime/Nodes/FixedShaderNodes/SplatterNode.cs
    startLine: 265
  assemblies:
  - Mixture.Runtime
  namespace: Mixture
  syntax:
    content: protected override void Disable()
    content.vb: Protected Overrides Sub Disable
  overridden: Mixture.ComputeShaderNode.Disable
  overload: Mixture.SplatterNode.Disable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mixture
  commentId: N:Mixture
  name: Mixture
  nameWithType: Mixture
  fullName: Mixture
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mixture.MixtureNode
  commentId: T:Mixture.MixtureNode
  parent: Mixture
  name: MixtureNode
  nameWithType: MixtureNode
  fullName: Mixture.MixtureNode
- uid: Mixture.ComputeShaderNode
  commentId: T:Mixture.ComputeShaderNode
  parent: Mixture
  name: ComputeShaderNode
  nameWithType: ComputeShaderNode
  fullName: Mixture.ComputeShaderNode
- uid: Mixture.ComputeShaderNode.computeShader
  commentId: F:Mixture.ComputeShaderNode.computeShader
  parent: Mixture.ComputeShaderNode
  name: computeShader
  nameWithType: ComputeShaderNode.computeShader
  fullName: Mixture.ComputeShaderNode.computeShader
- uid: Mixture.ComputeShaderNode.previewTexture
  commentId: P:Mixture.ComputeShaderNode.previewTexture
  parent: Mixture.ComputeShaderNode
  name: previewTexture
  nameWithType: ComputeShaderNode.previewTexture
  fullName: Mixture.ComputeShaderNode.previewTexture
- uid: Mixture.ComputeShaderNode.tempRenderTexture
  commentId: F:Mixture.ComputeShaderNode.tempRenderTexture
  parent: Mixture.ComputeShaderNode
  name: tempRenderTexture
  nameWithType: ComputeShaderNode.tempRenderTexture
  fullName: Mixture.ComputeShaderNode.tempRenderTexture
- uid: Mixture.ComputeShaderNode.previewTexturePropertyName
  commentId: P:Mixture.ComputeShaderNode.previewTexturePropertyName
  parent: Mixture.ComputeShaderNode
  name: previewTexturePropertyName
  nameWithType: ComputeShaderNode.previewTexturePropertyName
  fullName: Mixture.ComputeShaderNode.previewTexturePropertyName
- uid: Mixture.ComputeShaderNode.showOpenButton
  commentId: P:Mixture.ComputeShaderNode.showOpenButton
  parent: Mixture.ComputeShaderNode
  name: showOpenButton
  nameWithType: ComputeShaderNode.showOpenButton
  fullName: Mixture.ComputeShaderNode.showOpenButton
- uid: Mixture.ComputeShaderNode.LoadComputeShader(System.String)
  commentId: M:Mixture.ComputeShaderNode.LoadComputeShader(System.String)
  parent: Mixture.ComputeShaderNode
  isExternal: true
  name: LoadComputeShader(String)
  nameWithType: ComputeShaderNode.LoadComputeShader(String)
  fullName: Mixture.ComputeShaderNode.LoadComputeShader(System.String)
  spec.csharp:
  - uid: Mixture.ComputeShaderNode.LoadComputeShader(System.String)
    name: LoadComputeShader
    nameWithType: ComputeShaderNode.LoadComputeShader
    fullName: Mixture.ComputeShaderNode.LoadComputeShader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.ComputeShaderNode.LoadComputeShader(System.String)
    name: LoadComputeShader
    nameWithType: ComputeShaderNode.LoadComputeShader
    fullName: Mixture.ComputeShaderNode.LoadComputeShader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ComputeShaderNode.canProcess
  commentId: P:Mixture.ComputeShaderNode.canProcess
  parent: Mixture.ComputeShaderNode
  name: canProcess
  nameWithType: ComputeShaderNode.canProcess
  fullName: Mixture.ComputeShaderNode.canProcess
- uid: Mixture.ComputeShaderNode.ComputeIsValid
  commentId: M:Mixture.ComputeShaderNode.ComputeIsValid
  parent: Mixture.ComputeShaderNode
  name: ComputeIsValid()
  nameWithType: ComputeShaderNode.ComputeIsValid()
  fullName: Mixture.ComputeShaderNode.ComputeIsValid()
  spec.csharp:
  - uid: Mixture.ComputeShaderNode.ComputeIsValid
    name: ComputeIsValid
    nameWithType: ComputeShaderNode.ComputeIsValid
    fullName: Mixture.ComputeShaderNode.ComputeIsValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.ComputeShaderNode.ComputeIsValid
    name: ComputeIsValid
    nameWithType: ComputeShaderNode.ComputeIsValid
    fullName: Mixture.ComputeShaderNode.ComputeIsValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Mixture.ComputeShaderNode
  isExternal: true
  name: DispatchCompute(CommandBuffer, Int32, Int32, Int32, Int32)
  nameWithType: ComputeShaderNode.DispatchCompute(CommandBuffer, Int32, Int32, Int32, Int32)
  fullName: Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer, System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,System.Int32,System.Int32,System.Int32,System.Int32)
    name: DispatchCompute
    nameWithType: ComputeShaderNode.DispatchCompute
    fullName: Mixture.ComputeShaderNode.DispatchCompute
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,System.Int32,System.Int32,System.Int32,System.Int32)
    name: DispatchCompute
    nameWithType: ComputeShaderNode.DispatchCompute
    fullName: Mixture.ComputeShaderNode.DispatchCompute
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Mixture.ComputeShaderNode
  isExternal: true
  name: DispatchCompute(CommandBuffer, ComputeShader, Int32, Int32, Int32, Int32)
  nameWithType: ComputeShaderNode.DispatchCompute(CommandBuffer, ComputeShader, Int32, Int32, Int32, Int32)
  fullName: Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer, UnityEngine.ComputeShader, System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32,System.Int32,System.Int32,System.Int32)
    name: DispatchCompute
    nameWithType: ComputeShaderNode.DispatchCompute
    fullName: Mixture.ComputeShaderNode.DispatchCompute
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.ComputeShader
    name: ComputeShader
    nameWithType: ComputeShader
    fullName: UnityEngine.ComputeShader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.ComputeShaderNode.DispatchCompute(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32,System.Int32,System.Int32,System.Int32)
    name: DispatchCompute
    nameWithType: ComputeShaderNode.DispatchCompute
    fullName: Mixture.ComputeShaderNode.DispatchCompute
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.ComputeShader
    name: ComputeShader
    nameWithType: ComputeShader
    fullName: UnityEngine.ComputeShader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,System.Int32)
  commentId: M:Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,System.Int32)
  parent: Mixture.ComputeShaderNode
  isExternal: true
  name: DispatchComputePreview(CommandBuffer, Int32)
  nameWithType: ComputeShaderNode.DispatchComputePreview(CommandBuffer, Int32)
  fullName: Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer, System.Int32)
  spec.csharp:
  - uid: Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,System.Int32)
    name: DispatchComputePreview
    nameWithType: ComputeShaderNode.DispatchComputePreview
    fullName: Mixture.ComputeShaderNode.DispatchComputePreview
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,System.Int32)
    name: DispatchComputePreview
    nameWithType: ComputeShaderNode.DispatchComputePreview
    fullName: Mixture.ComputeShaderNode.DispatchComputePreview
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32)
  commentId: M:Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32)
  parent: Mixture.ComputeShaderNode
  isExternal: true
  name: DispatchComputePreview(CommandBuffer, ComputeShader, Int32)
  nameWithType: ComputeShaderNode.DispatchComputePreview(CommandBuffer, ComputeShader, Int32)
  fullName: Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer, UnityEngine.ComputeShader, System.Int32)
  spec.csharp:
  - uid: Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32)
    name: DispatchComputePreview
    nameWithType: ComputeShaderNode.DispatchComputePreview
    fullName: Mixture.ComputeShaderNode.DispatchComputePreview
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.ComputeShader
    name: ComputeShader
    nameWithType: ComputeShader
    fullName: UnityEngine.ComputeShader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.ComputeShaderNode.DispatchComputePreview(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeShader,System.Int32)
    name: DispatchComputePreview
    nameWithType: ComputeShaderNode.DispatchComputePreview
    fullName: Mixture.ComputeShaderNode.DispatchComputePreview
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.ComputeShader
    name: ComputeShader
    nameWithType: ComputeShader
    fullName: UnityEngine.ComputeShader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.ComputeShaderNode.ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
  commentId: M:Mixture.ComputeShaderNode.ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
  parent: Mixture.ComputeShaderNode
  isExternal: true
  name: ClearBuffer(CommandBuffer, ComputeBuffer, Int32, Int32)
  nameWithType: ComputeShaderNode.ClearBuffer(CommandBuffer, ComputeBuffer, Int32, Int32)
  fullName: Mixture.ComputeShaderNode.ClearBuffer(UnityEngine.Rendering.CommandBuffer, UnityEngine.ComputeBuffer, System.Int32, System.Int32)
  spec.csharp:
  - uid: Mixture.ComputeShaderNode.ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
    name: ClearBuffer
    nameWithType: ComputeShaderNode.ClearBuffer
    fullName: Mixture.ComputeShaderNode.ClearBuffer
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.ComputeBuffer
    name: ComputeBuffer
    nameWithType: ComputeBuffer
    fullName: UnityEngine.ComputeBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.ComputeShaderNode.ClearBuffer(UnityEngine.Rendering.CommandBuffer,UnityEngine.ComputeBuffer,System.Int32,System.Int32)
    name: ClearBuffer
    nameWithType: ComputeShaderNode.ClearBuffer
    fullName: Mixture.ComputeShaderNode.ClearBuffer
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.ComputeBuffer
    name: ComputeBuffer
    nameWithType: ComputeBuffer
    fullName: UnityEngine.ComputeBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.graph
  commentId: P:Mixture.MixtureNode.graph
  parent: Mixture.MixtureNode
  name: graph
  nameWithType: MixtureNode.graph
  fullName: Mixture.MixtureNode.graph
- uid: Mixture.MixtureNode.rtSettings
  commentId: F:Mixture.MixtureNode.rtSettings
  parent: Mixture.MixtureNode
  name: rtSettings
  nameWithType: MixtureNode.rtSettings
  fullName: Mixture.MixtureNode.rtSettings
- uid: Mixture.MixtureNode.defaultRTSettings
  commentId: P:Mixture.MixtureNode.defaultRTSettings
  parent: Mixture.MixtureNode
  name: defaultRTSettings
  nameWithType: MixtureNode.defaultRTSettings
  fullName: Mixture.MixtureNode.defaultRTSettings
- uid: Mixture.MixtureNode.nodeWidth
  commentId: P:Mixture.MixtureNode.nodeWidth
  parent: Mixture.MixtureNode
  name: nodeWidth
  nameWithType: MixtureNode.nodeWidth
  fullName: Mixture.MixtureNode.nodeWidth
- uid: Mixture.MixtureNode.hasSettings
  commentId: P:Mixture.MixtureNode.hasSettings
  parent: Mixture.MixtureNode
  name: hasSettings
  nameWithType: MixtureNode.hasSettings
  fullName: Mixture.MixtureNode.hasSettings
- uid: Mixture.MixtureNode.hasPreview
  commentId: P:Mixture.MixtureNode.hasPreview
  parent: Mixture.MixtureNode
  name: hasPreview
  nameWithType: MixtureNode.hasPreview
  fullName: Mixture.MixtureNode.hasPreview
- uid: Mixture.MixtureNode.defaultPreviewChannels
  commentId: P:Mixture.MixtureNode.defaultPreviewChannels
  parent: Mixture.MixtureNode
  name: defaultPreviewChannels
  nameWithType: MixtureNode.defaultPreviewChannels
  fullName: Mixture.MixtureNode.defaultPreviewChannels
- uid: Mixture.MixtureNode.showPreviewExposure
  commentId: P:Mixture.MixtureNode.showPreviewExposure
  parent: Mixture.MixtureNode
  name: showPreviewExposure
  nameWithType: MixtureNode.showPreviewExposure
  fullName: Mixture.MixtureNode.showPreviewExposure
- uid: Mixture.MixtureNode.isPreviewCollapsed
  commentId: F:Mixture.MixtureNode.isPreviewCollapsed
  parent: Mixture.MixtureNode
  name: isPreviewCollapsed
  nameWithType: MixtureNode.isPreviewCollapsed
  fullName: Mixture.MixtureNode.isPreviewCollapsed
- uid: Mixture.MixtureNode.onSettingsChanged
  commentId: E:Mixture.MixtureNode.onSettingsChanged
  parent: Mixture.MixtureNode
  name: onSettingsChanged
  nameWithType: MixtureNode.onSettingsChanged
  fullName: Mixture.MixtureNode.onSettingsChanged
- uid: Mixture.MixtureNode.beforeProcessSetup
  commentId: E:Mixture.MixtureNode.beforeProcessSetup
  parent: Mixture.MixtureNode
  name: beforeProcessSetup
  nameWithType: MixtureNode.beforeProcessSetup
  fullName: Mixture.MixtureNode.beforeProcessSetup
- uid: Mixture.MixtureNode.afterProcessCleanup
  commentId: E:Mixture.MixtureNode.afterProcessCleanup
  parent: Mixture.MixtureNode
  name: afterProcessCleanup
  nameWithType: MixtureNode.afterProcessCleanup
  fullName: Mixture.MixtureNode.afterProcessCleanup
- uid: Mixture.MixtureNode.showControlsOnHover
  commentId: P:Mixture.MixtureNode.showControlsOnHover
  parent: Mixture.MixtureNode
  name: showControlsOnHover
  nameWithType: MixtureNode.showControlsOnHover
  fullName: Mixture.MixtureNode.showControlsOnHover
- uid: Mixture.MixtureNode.temporaryMaterials
  commentId: F:Mixture.MixtureNode.temporaryMaterials
  parent: Mixture.MixtureNode
  name: temporaryMaterials
  nameWithType: MixtureNode.temporaryMaterials
  fullName: Mixture.MixtureNode.temporaryMaterials
- uid: Mixture.MixtureNode.previewMode
  commentId: F:Mixture.MixtureNode.previewMode
  parent: Mixture.MixtureNode
  name: previewMode
  nameWithType: MixtureNode.previewMode
  fullName: Mixture.MixtureNode.previewMode
- uid: Mixture.MixtureNode.previewMip
  commentId: F:Mixture.MixtureNode.previewMip
  parent: Mixture.MixtureNode
  name: previewMip
  nameWithType: MixtureNode.previewMip
  fullName: Mixture.MixtureNode.previewMip
- uid: Mixture.MixtureNode.previewVisible
  commentId: F:Mixture.MixtureNode.previewVisible
  parent: Mixture.MixtureNode
  name: previewVisible
  nameWithType: MixtureNode.previewVisible
  fullName: Mixture.MixtureNode.previewVisible
- uid: Mixture.MixtureNode.previewEV100
  commentId: F:Mixture.MixtureNode.previewEV100
  parent: Mixture.MixtureNode
  name: previewEV100
  nameWithType: MixtureNode.previewEV100
  fullName: Mixture.MixtureNode.previewEV100
- uid: Mixture.MixtureNode.recorder
  commentId: P:Mixture.MixtureNode.recorder
  parent: Mixture.MixtureNode
  name: recorder
  nameWithType: MixtureNode.recorder
  fullName: Mixture.MixtureNode.recorder
- uid: Mixture.MixtureNode.OnNodeCreated
  commentId: M:Mixture.MixtureNode.OnNodeCreated
  parent: Mixture.MixtureNode
  name: OnNodeCreated()
  nameWithType: MixtureNode.OnNodeCreated()
  fullName: Mixture.MixtureNode.OnNodeCreated()
  spec.csharp:
  - uid: Mixture.MixtureNode.OnNodeCreated
    name: OnNodeCreated
    nameWithType: MixtureNode.OnNodeCreated
    fullName: Mixture.MixtureNode.OnNodeCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnNodeCreated
    name: OnNodeCreated
    nameWithType: MixtureNode.OnNodeCreated
    fullName: Mixture.MixtureNode.OnNodeCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean)
  commentId: M:Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean)
  parent: Mixture.MixtureNode
  isExternal: true
  name: UpdateTempRenderTexture(CustomRenderTexture, Boolean, Boolean)
  nameWithType: MixtureNode.UpdateTempRenderTexture(CustomRenderTexture, Boolean, Boolean)
  fullName: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean)
    name: UpdateTempRenderTexture
    nameWithType: MixtureNode.UpdateTempRenderTexture
    fullName: Mixture.MixtureNode.UpdateTempRenderTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.CustomRenderTexture
    name: CustomRenderTexture
    nameWithType: CustomRenderTexture
    fullName: UnityEngine.CustomRenderTexture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.UpdateTempRenderTexture(UnityEngine.CustomRenderTexture@,System.Boolean,System.Boolean)
    name: UpdateTempRenderTexture
    nameWithType: MixtureNode.UpdateTempRenderTexture
    fullName: Mixture.MixtureNode.UpdateTempRenderTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.CustomRenderTexture
    name: CustomRenderTexture
    nameWithType: CustomRenderTexture
    fullName: UnityEngine.CustomRenderTexture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.MixtureNode
  isExternal: true
  name: OnProcess(CommandBuffer)
  nameWithType: MixtureNode.OnProcess(CommandBuffer)
  fullName: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
  spec.csharp:
  - uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
    name: OnProcess
    nameWithType: MixtureNode.OnProcess
    fullName: Mixture.MixtureNode.OnProcess
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnProcess(UnityEngine.Rendering.CommandBuffer)
    name: OnProcess
    nameWithType: MixtureNode.OnProcess
    fullName: Mixture.MixtureNode.OnProcess
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.Process
  commentId: M:Mixture.MixtureNode.Process
  parent: Mixture.MixtureNode
  name: Process()
  nameWithType: MixtureNode.Process()
  fullName: Mixture.MixtureNode.Process()
  spec.csharp:
  - uid: Mixture.MixtureNode.Process
    name: Process
    nameWithType: MixtureNode.Process
    fullName: Mixture.MixtureNode.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.Process
    name: Process
    nameWithType: MixtureNode.Process
    fullName: Mixture.MixtureNode.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.AddObjectToGraph(UnityEngine.Object)
  commentId: M:Mixture.MixtureNode.AddObjectToGraph(UnityEngine.Object)
  parent: Mixture.MixtureNode
  isExternal: true
  name: AddObjectToGraph(Object)
  nameWithType: MixtureNode.AddObjectToGraph(Object)
  fullName: Mixture.MixtureNode.AddObjectToGraph(UnityEngine.Object)
  spec.csharp:
  - uid: Mixture.MixtureNode.AddObjectToGraph(UnityEngine.Object)
    name: AddObjectToGraph
    nameWithType: MixtureNode.AddObjectToGraph
    fullName: Mixture.MixtureNode.AddObjectToGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.AddObjectToGraph(UnityEngine.Object)
    name: AddObjectToGraph
    nameWithType: MixtureNode.AddObjectToGraph
    fullName: Mixture.MixtureNode.AddObjectToGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  commentId: M:Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  parent: Mixture.MixtureNode
  isExternal: true
  name: RemoveObjectFromGraph(Object)
  nameWithType: MixtureNode.RemoveObjectFromGraph(Object)
  fullName: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
  spec.csharp:
  - uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
    name: RemoveObjectFromGraph
    nameWithType: MixtureNode.RemoveObjectFromGraph
    fullName: Mixture.MixtureNode.RemoveObjectFromGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.RemoveObjectFromGraph(UnityEngine.Object)
    name: RemoveObjectFromGraph
    nameWithType: MixtureNode.RemoveObjectFromGraph
    fullName: Mixture.MixtureNode.RemoveObjectFromGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  commentId: M:Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetPropertyType(Shader, Int32)
  nameWithType: MixtureNode.GetPropertyType(Shader, Int32)
  fullName: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader, System.Int32)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
    name: GetPropertyType
    nameWithType: MixtureNode.GetPropertyType
    fullName: Mixture.MixtureNode.GetPropertyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Shader
    name: Shader
    nameWithType: Shader
    fullName: UnityEngine.Shader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetPropertyType(UnityEngine.Shader,System.Int32)
    name: GetPropertyType
    nameWithType: MixtureNode.GetPropertyType
    fullName: Mixture.MixtureNode.GetPropertyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Shader
    name: Shader
    nameWithType: Shader
    fullName: UnityEngine.Shader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetMaterialPortDatas(Material)
  nameWithType: MixtureNode.GetMaterialPortDatas(Material)
  fullName: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
    name: GetMaterialPortDatas
    nameWithType: MixtureNode.GetMaterialPortDatas
    fullName: Mixture.MixtureNode.GetMaterialPortDatas
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetMaterialPortDatas(UnityEngine.Material)
    name: GetMaterialPortDatas
    nameWithType: MixtureNode.GetMaterialPortDatas
    fullName: Mixture.MixtureNode.GetMaterialPortDatas
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: AssignMaterialPropertiesFromEdges(List<SerializableEdge>, Material)
  nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges(List<SerializableEdge>, Material)
  fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List<SerializableEdge>, UnityEngine.Material)
  nameWithType.vb: MixtureNode.AssignMaterialPropertiesFromEdges(List(Of SerializableEdge), Material)
  fullName.vb: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List(Of SerializableEdge), UnityEngine.Material)
  name.vb: AssignMaterialPropertiesFromEdges(List(Of SerializableEdge), Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
    name: AssignMaterialPropertiesFromEdges
    nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges
    fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges(System.Collections.Generic.List{SerializableEdge},UnityEngine.Material)
    name: AssignMaterialPropertiesFromEdges
    nameWithType: MixtureNode.AssignMaterialPropertiesFromEdges
    fullName: Mixture.MixtureNode.AssignMaterialPropertiesFromEdges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SerializableEdge
    name: SerializableEdge
    nameWithType: SerializableEdge
    fullName: SerializableEdge
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.OnSettingsChanged
  commentId: M:Mixture.MixtureNode.OnSettingsChanged
  parent: Mixture.MixtureNode
  name: OnSettingsChanged()
  nameWithType: MixtureNode.OnSettingsChanged()
  fullName: Mixture.MixtureNode.OnSettingsChanged()
  spec.csharp:
  - uid: Mixture.MixtureNode.OnSettingsChanged
    name: OnSettingsChanged
    nameWithType: MixtureNode.OnSettingsChanged
    fullName: Mixture.MixtureNode.OnSettingsChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.OnSettingsChanged
    name: OnSettingsChanged
    nameWithType: MixtureNode.OnSettingsChanged
    fullName: Mixture.MixtureNode.OnSettingsChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  commentId: M:Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetDefaultMaterial(Material)
  nameWithType: MixtureNode.GetDefaultMaterial(Material)
  fullName: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
    name: GetDefaultMaterial
    nameWithType: MixtureNode.GetDefaultMaterial
    fullName: Mixture.MixtureNode.GetDefaultMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetDefaultMaterial(UnityEngine.Material)
    name: GetDefaultMaterial
    nameWithType: MixtureNode.GetDefaultMaterial
    fullName: Mixture.MixtureNode.GetDefaultMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  commentId: M:Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
  parent: Mixture.MixtureNode
  isExternal: true
  name: ResetMaterialPropertyToDefault(Material, String)
  nameWithType: MixtureNode.ResetMaterialPropertyToDefault(Material, String)
  fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material, System.String)
  spec.csharp:
  - uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
    name: ResetMaterialPropertyToDefault
    nameWithType: MixtureNode.ResetMaterialPropertyToDefault
    fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.ResetMaterialPropertyToDefault(UnityEngine.Material,System.String)
    name: ResetMaterialPropertyToDefault
    nameWithType: MixtureNode.ResetMaterialPropertyToDefault
    fullName: Mixture.MixtureNode.ResetMaterialPropertyToDefault
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetMixtureDependencies
  commentId: M:Mixture.MixtureNode.GetMixtureDependencies
  parent: Mixture.MixtureNode
  name: GetMixtureDependencies()
  nameWithType: MixtureNode.GetMixtureDependencies()
  fullName: Mixture.MixtureNode.GetMixtureDependencies()
  spec.csharp:
  - uid: Mixture.MixtureNode.GetMixtureDependencies
    name: GetMixtureDependencies
    nameWithType: MixtureNode.GetMixtureDependencies
    fullName: Mixture.MixtureNode.GetMixtureDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetMixtureDependencies
    name: GetMixtureDependencies
    nameWithType: MixtureNode.GetMixtureDependencies
    fullName: Mixture.MixtureNode.GetMixtureDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.GetTempMaterial(System.String)
  commentId: M:Mixture.MixtureNode.GetTempMaterial(System.String)
  parent: Mixture.MixtureNode
  isExternal: true
  name: GetTempMaterial(String)
  nameWithType: MixtureNode.GetTempMaterial(String)
  fullName: Mixture.MixtureNode.GetTempMaterial(System.String)
  spec.csharp:
  - uid: Mixture.MixtureNode.GetTempMaterial(System.String)
    name: GetTempMaterial
    nameWithType: MixtureNode.GetTempMaterial
    fullName: Mixture.MixtureNode.GetTempMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.GetTempMaterial(System.String)
    name: GetTempMaterial
    nameWithType: MixtureNode.GetTempMaterial
    fullName: Mixture.MixtureNode.GetTempMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{UnityEngine.Texture}
  commentId: T:System.Collections.Generic.List{UnityEngine.Texture}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Texture>
  nameWithType: List<Texture>
  fullName: System.Collections.Generic.List<UnityEngine.Texture>
  nameWithType.vb: List(Of Texture)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Texture)
  name.vb: List(Of Texture)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Texture
    name: Texture
    nameWithType: Texture
    fullName: UnityEngine.Texture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Texture
    name: Texture
    nameWithType: Texture
    fullName: UnityEngine.Texture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: UnityEngine.Texture
  commentId: T:UnityEngine.Texture
  parent: UnityEngine
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Mixture.SplatterNode.Sequence
  commentId: T:Mixture.SplatterNode.Sequence
  parent: Mixture
  name: SplatterNode.Sequence
  nameWithType: SplatterNode.Sequence
  fullName: Mixture.SplatterNode.Sequence
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: Mixture.SplatterNode.RotationMode
  commentId: T:Mixture.SplatterNode.RotationMode
  parent: Mixture
  name: SplatterNode.RotationMode
  nameWithType: SplatterNode.RotationMode
  fullName: Mixture.SplatterNode.RotationMode
- uid: Mixture.SplatterNode.ScaleMode
  commentId: T:Mixture.SplatterNode.ScaleMode
  parent: Mixture
  name: SplatterNode.ScaleMode
  nameWithType: SplatterNode.ScaleMode
  fullName: Mixture.SplatterNode.ScaleMode
- uid: Mixture.SplatterNode.Operator
  commentId: T:Mixture.SplatterNode.Operator
  parent: Mixture
  name: SplatterNode.Operator
  nameWithType: SplatterNode.Operator
  fullName: Mixture.SplatterNode.Operator
- uid: Mixture.ComputeShaderNode.name
  commentId: P:Mixture.ComputeShaderNode.name
  parent: Mixture.ComputeShaderNode
  name: name
  nameWithType: ComputeShaderNode.name
  fullName: Mixture.ComputeShaderNode.name
- uid: Mixture.SplatterNode.name*
  commentId: Overload:Mixture.SplatterNode.name
  name: name
  nameWithType: SplatterNode.name
  fullName: Mixture.SplatterNode.name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mixture.ComputeShaderNode.computeShaderResourcePath
  commentId: P:Mixture.ComputeShaderNode.computeShaderResourcePath
  parent: Mixture.ComputeShaderNode
  name: computeShaderResourcePath
  nameWithType: ComputeShaderNode.computeShaderResourcePath
  fullName: Mixture.ComputeShaderNode.computeShaderResourcePath
- uid: Mixture.SplatterNode.computeShaderResourcePath*
  commentId: Overload:Mixture.SplatterNode.computeShaderResourcePath
  name: computeShaderResourcePath
  nameWithType: SplatterNode.computeShaderResourcePath
  fullName: Mixture.SplatterNode.computeShaderResourcePath
- uid: Mixture.MixtureNode.supportedDimensions
  commentId: P:Mixture.MixtureNode.supportedDimensions
  parent: Mixture.MixtureNode
  name: supportedDimensions
  nameWithType: MixtureNode.supportedDimensions
  fullName: Mixture.MixtureNode.supportedDimensions
- uid: Mixture.SplatterNode.supportedDimensions*
  commentId: Overload:Mixture.SplatterNode.supportedDimensions
  name: supportedDimensions
  nameWithType: SplatterNode.supportedDimensions
  fullName: Mixture.SplatterNode.supportedDimensions
- uid: System.Collections.Generic.List{Mixture.OutputDimension}
  commentId: T:System.Collections.Generic.List{Mixture.OutputDimension}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<OutputDimension>
  nameWithType: List<OutputDimension>
  fullName: System.Collections.Generic.List<Mixture.OutputDimension>
  nameWithType.vb: List(Of OutputDimension)
  fullName.vb: System.Collections.Generic.List(Of Mixture.OutputDimension)
  name.vb: List(Of OutputDimension)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mixture.OutputDimension
    name: OutputDimension
    nameWithType: OutputDimension
    fullName: Mixture.OutputDimension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mixture.OutputDimension
    name: OutputDimension
    nameWithType: OutputDimension
    fullName: Mixture.OutputDimension
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.MixtureNode.showDefaultInspector
  commentId: P:Mixture.MixtureNode.showDefaultInspector
  parent: Mixture.MixtureNode
  name: showDefaultInspector
  nameWithType: MixtureNode.showDefaultInspector
  fullName: Mixture.MixtureNode.showDefaultInspector
- uid: Mixture.SplatterNode.showDefaultInspector*
  commentId: Overload:Mixture.SplatterNode.showDefaultInspector
  name: showDefaultInspector
  nameWithType: SplatterNode.showDefaultInspector
  fullName: Mixture.SplatterNode.showDefaultInspector
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mixture.ComputeShaderNode.Enable
  commentId: M:Mixture.ComputeShaderNode.Enable
  parent: Mixture.ComputeShaderNode
  name: Enable()
  nameWithType: ComputeShaderNode.Enable()
  fullName: Mixture.ComputeShaderNode.Enable()
  spec.csharp:
  - uid: Mixture.ComputeShaderNode.Enable
    name: Enable
    nameWithType: ComputeShaderNode.Enable
    fullName: Mixture.ComputeShaderNode.Enable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.ComputeShaderNode.Enable
    name: Enable
    nameWithType: ComputeShaderNode.Enable
    fullName: Mixture.ComputeShaderNode.Enable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.SplatterNode.Enable*
  commentId: Overload:Mixture.SplatterNode.Enable
  name: Enable
  nameWithType: SplatterNode.Enable
  fullName: Mixture.SplatterNode.Enable
- uid: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  commentId: M:Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  parent: Mixture.MixtureNode
  isExternal: true
  name: ProcessNode(CommandBuffer)
  nameWithType: MixtureNode.ProcessNode(CommandBuffer)
  fullName: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
  spec.csharp:
  - uid: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
    name: ProcessNode
    nameWithType: MixtureNode.ProcessNode
    fullName: Mixture.MixtureNode.ProcessNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.MixtureNode.ProcessNode(UnityEngine.Rendering.CommandBuffer)
    name: ProcessNode
    nameWithType: MixtureNode.ProcessNode
    fullName: Mixture.MixtureNode.ProcessNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rendering.CommandBuffer
    name: CommandBuffer
    nameWithType: CommandBuffer
    fullName: UnityEngine.Rendering.CommandBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.SplatterNode.ProcessNode*
  commentId: Overload:Mixture.SplatterNode.ProcessNode
  name: ProcessNode
  nameWithType: SplatterNode.ProcessNode
  fullName: Mixture.SplatterNode.ProcessNode
- uid: UnityEngine.Rendering.CommandBuffer
  commentId: T:UnityEngine.Rendering.CommandBuffer
  parent: UnityEngine.Rendering
  isExternal: true
  name: CommandBuffer
  nameWithType: CommandBuffer
  fullName: UnityEngine.Rendering.CommandBuffer
- uid: UnityEngine.Rendering
  commentId: N:UnityEngine.Rendering
  isExternal: true
  name: UnityEngine.Rendering
  nameWithType: UnityEngine.Rendering
  fullName: UnityEngine.Rendering
- uid: Mixture.ComputeShaderNode.Disable
  commentId: M:Mixture.ComputeShaderNode.Disable
  parent: Mixture.ComputeShaderNode
  name: Disable()
  nameWithType: ComputeShaderNode.Disable()
  fullName: Mixture.ComputeShaderNode.Disable()
  spec.csharp:
  - uid: Mixture.ComputeShaderNode.Disable
    name: Disable
    nameWithType: ComputeShaderNode.Disable
    fullName: Mixture.ComputeShaderNode.Disable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mixture.ComputeShaderNode.Disable
    name: Disable
    nameWithType: ComputeShaderNode.Disable
    fullName: Mixture.ComputeShaderNode.Disable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixture.SplatterNode.Disable*
  commentId: Overload:Mixture.SplatterNode.Disable
  name: Disable
  nameWithType: SplatterNode.Disable
  fullName: Mixture.SplatterNode.Disable
