### YamlMime:ManagedReference
items:
- uid: Mixture.MixtureParameterView
  commentId: T:Mixture.MixtureParameterView
  id: MixtureParameterView
  parent: Mixture
  children:
  - Mixture.MixtureParameterView.GetExposedParameterTypes
  langs:
  - csharp
  - vb
  name: MixtureParameterView
  nameWithType: MixtureParameterView
  fullName: Mixture.MixtureParameterView
  type: Class
  source:
    remote:
      path: Packages/com.alelievr.mixture/Editor/Graph/MixtureParameterView.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: MixtureParameterView
    path: ../../Packages/com.alelievr.mixture/Editor/Graph/MixtureParameterView.cs
    startLine: 7
  assemblies:
  - Unity.ShaderGraph.GraphicsTests
  namespace: Mixture
  syntax:
    content: 'public class MixtureParameterView : ExposedParameterView'
    content.vb: >-
      Public Class MixtureParameterView
          Inherits ExposedParameterView
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mixture.MixtureParameterView.GetExposedParameterTypes
  commentId: M:Mixture.MixtureParameterView.GetExposedParameterTypes
  id: GetExposedParameterTypes
  parent: Mixture.MixtureParameterView
  langs:
  - csharp
  - vb
  name: GetExposedParameterTypes()
  nameWithType: MixtureParameterView.GetExposedParameterTypes()
  fullName: Mixture.MixtureParameterView.GetExposedParameterTypes()
  type: Method
  source:
    remote:
      path: Packages/com.alelievr.mixture/Editor/Graph/MixtureParameterView.cs
      branch: new-custom-texture-api
      repo: git@github.com:alelievr/Mixture.git
    id: GetExposedParameterTypes
    path: ../../Packages/com.alelievr.mixture/Editor/Graph/MixtureParameterView.cs
    startLine: 11
  assemblies:
  - Unity.ShaderGraph.GraphicsTests
  namespace: Mixture
  syntax:
    content: protected override IEnumerable<Type> GetExposedParameterTypes()
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
    content.vb: Protected Overrides Function GetExposedParameterTypes As IEnumerable(Of Type)
  overload: Mixture.MixtureParameterView.GetExposedParameterTypes*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mixture
  commentId: N:Mixture
  name: Mixture
  nameWithType: Mixture
  fullName: Mixture
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mixture.MixtureParameterView.GetExposedParameterTypes*
  commentId: Overload:Mixture.MixtureParameterView.GetExposedParameterTypes
  name: GetExposedParameterTypes
  nameWithType: MixtureParameterView.GetExposedParameterTypes
  fullName: Mixture.MixtureParameterView.GetExposedParameterTypes
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
